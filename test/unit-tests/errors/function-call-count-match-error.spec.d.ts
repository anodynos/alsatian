export declare class FunctionCallCountMatchErrorTests {
    shouldBeCalledMessage(callCount: number): void;
    shouldNotBeCalledMessage(callCount: number): void;
    shouldBeCalledGreaterThanMessage(callCount: number): void;
    shouldBeCalledLessThanMessage(callCount: number): void;
    actualValueAndShouldNotMatchShouldBeSetToFunctionWasCalled(callCount: number): void;
    expectedValueAndShouldMatchShouldBeSetToFunctionToBeCalled(callCount: number): void;
    expectedValueAndShouldNotMatchShouldBeSetToFunctionNotToBeCalled(callCount: number): void;
    expectedValueAndShouldMatchGreaterThanShouldBeSetToFunctionToBeCalled(callCount: number): void;
    expectedValueAndShouldMatchLessThanShouldBeSetToFunctionToBeCalled(callCount: number): void;
    shouldBeCalledWithArgsMessage(args: Array<any>): void;
    shouldNotBeCalledWithArgsMessage(expectedArguments: Array<any>): void;
    shouldBeCalledGreaterThanWithArgsMessage(args: Array<any>): void;
    shouldBeCalledLessThanWithArgsMessage(expectedArguments: Array<any>): void;
    actualValueAndShouldMatchShouldBeSetToFunctionWasNotCalledWithArguments(actualArgumentsList: Array<Array<any>>): void;
    actualValueAndShouldNotMatchShouldBeSetToFunctionWasCalledWithArguments(actualArgumentsList: Array<Array<any>>): void;
    actualValueAndShouldMatchGreaterThanShouldBeSetToFunctionWasNotCalledWithArguments(actualArgumentsList: Array<Array<any>>): void;
    actualValueAndShouldMatchLessThanShouldBeSetToFunctionWasNotCalledWithArguments(actualArgumentsList: Array<Array<any>>): void;
    expectedValueAndShouldMatchShouldBeSetToFunctionToBeCalledWithArguments(expectedArguments: Array<any>): void;
    expectedValueAndShouldNotMatchShouldBeSetToFunctionNotToBeCalledWithArguments(expectedArguments: Array<any>): void;
    anyArgumentOutputAsAnythingInMessage(): void;
    twoAnyArgumentsBothOutputAsAnythingInMessage(): void;
    anyArgumentOutputAsAnythingInNotExpectedMessage(): void;
    twoAnyArgumentsBothOutputAsAnythingInNotExpectedMessage(): void;
    anyArgumentOutputAsAnythingInGreaterThanMessage(): void;
    twoAnyArgumentsBothOutputAsAnythingInGreaterThanMessage(): void;
    anyArgumentOutputAsAnythingInLessThanMessage(): void;
    twoAnyArgumentsBothOutputAsAnythingInLessThanMessage(): void;
    anyArgumentOutputAsAnythingInExpectedValue(): void;
    twoAnyArgumentsBothOutputAsAnythingInExpectedValue(): void;
    anyArgumentOutputAsAnythingInNotExpectedValue(): void;
    twoAnyArgumentsBothOutputAsAnythingInNotExpectedValue(): void;
    anyArgumentOutputAsAnythingInGreaterThanExpectedValue(): void;
    twoAnyArgumentsBothOutputAsAnythingInGreaterThanExpectedValue(): void;
    anyArgumentOutputAsAnythingInLessThanExpectedValue(): void;
    twoAnyArgumentsBothOutputAsAnythingInLessThanExpectedValue(): void;
    anyTypeArgumentOutputAsAnyTypeInMessage(type: new (...args: Array<any>) => object): void;
    twoAnyTypeArgumentsBothOutputAsAnyTypeInMessage(typeOne: new (...args: Array<any>) => object, typeTwo: new (...args: Array<any>) => object): void;
    anyTypeArgumentOutputAsAnyTypeInNotExpectedMessage(type: new (...args: Array<any>) => object): void;
    twoAnyTypeArgumentsBothOutputAsAnyTyoeInNotExpectedMessage(typeOne: new (...args: Array<any>) => object, typeTwo: new (...args: Array<any>) => object): void;
    anyTypeArgumentOutputAsAnyTypeInGreaterThanMessage(type: new (...args: Array<any>) => object): void;
    twoAnyTypeArgumentsBothOutputAsAnyTypeInGreaterThanMessage(typeOne: new (...args: Array<any>) => object, typeTwo: new (...args: Array<any>) => object): void;
    anyTypeArgumentOutputAsAnyTypeInLessThanMessage(type: new (...args: Array<any>) => object): void;
    twoAnyTypeArgumentsBothOutputAsAnyTypeInLessThanMessage(typeOne: new (...args: Array<any>) => object, typeTwo: new (...args: Array<any>) => object): void;
    anyTypeArgumentOutputAsAnyTypeInExpectedValue(type: new (...args: Array<any>) => object): void;
    twoAnyTypeArgumentsBothOutputAsAnyTypeInExpectedValue(typeOne: new (...args: Array<any>) => object, typeTwo: new (...args: Array<any>) => object): void;
    anyTypeArgumentOutputAsAnyTypeInNotExpectedValue(type: new (...args: Array<any>) => object): void;
    twoAnyTypeArgumentsBothOutputAsAnyTypeInNotExpectedValue(typeOne: new (...args: Array<any>) => object, typeTwo: new (...args: Array<any>) => object): void;
    anyAndAnyTypeArgumentsBothOutputAsAnythingAndAnyTypeInMessage(type: new (...args: Array<any>) => object): void;
    anyAndAnyTypeArgumentsBothOutputAsAnythingAndAnyTypeInMessageAnyTyoeInNotExpectedMessage(type: new (...args: Array<any>) => object): void;
    anyAndAnyTypeArgumentsBothOutputAsAnythingAndAnyTypeInExpectedValue(type: new (...args: Array<any>) => object): void;
    anyAndAnyTypeArgumentsBothOutputAsAnythignAndAnyTypeInNotExpectedValue(type: new (...args: Array<any>) => object): void;
    anyTypeAndAnyArgumentsBothOutputAsAnyTypeAndAnythingInMessage(type: new (...args: Array<any>) => object): void;
    anyTypeAndAnyArgumentsBothOutputAsAnyTypeAndAnythingInMessageAnyTyoeInNotExpectedMessage(type: new (...args: Array<any>) => object): void;
    anyTypeAndAnyArgumentsBothOutputAsAnyTypeAndAnythingInExpectedValue(type: new (...args: Array<any>) => object): void;
    anyTypeAndAnyArgumentsBothOutputAsAnyTypeAndAnythingInNotExpectedValue(type: new (...args: Array<any>) => object): void;
    exactAndAnyArgumentsBothOutputAsExactAndAnythingInMessage(exactValue: any): void;
    exactAndAnyArgumentsBothOutputAsExactAndAnythingInMessageAnyTyoeInNotExpectedMessage(exactValue: any): void;
    exactAndAnyArgumentsBothOutputAsExactAndAnythingInExpectedValue(exactValue: any): void;
    exactAndAnyArgumentsBothOutputAsExactAndAnythingInNotExpectedValue(exactValue: any): void;
    anyAndExactArgumentsBothOutputAsAnythingAndExactInMessage(exactValue: any): void;
    anyAndExaactArgumentsBothOutputAsAnythingAndExactInMessageAnyTyoeInNotExpectedMessage(exactValue: any): void;
    anyAndExactArgumentsBothOutputAsAnythingAndExactInExpectedValue(exactValue: any): void;
    anyAndExactArgumentsBothOutputAsAnythingAndExactInNotExpectedValue(exactValue: any): void;
    exactAndAnyTypeArgumentsBothOutputAsExactAndAnyTypeInMessage(type: new (...args: Array<any>) => object, exactValue: any): void;
    exactAndAnyTypeArgumentsBothOutputAsExactAndAnyTypeInMessageAnyTyoeInNotExpectedMessage(type: new (...args: Array<any>) => object, exactValue: any): void;
    exactAndAnyTypeArgumentsBothOutputAsExactAndAnyTypeInExpectedValue(type: new (...args: Array<any>) => object, exactValue: any): void;
    exactAndAnyTypeArgumentsBothOutputAsExactAndAnyTypeInNotExpectedValue(type: new (...args: Array<any>) => object, exactValue: any): void;
    anyTypeAndExactArgumentsBothOutputAsAnyTypeAndExactInMessage(type: new (...args: Array<any>) => object, exactValue: any): void;
    anyTypeAndExaactArgumentsBothOutputAsAnyTypeAndExactInMessageAnyTyoeInNotExpectedMessage(type: new (...args: Array<any>) => object, exactValue: any): void;
    anyTypeAndExactArgumentsBothOutputAsAnyTypeAndExactInExpectedValue(type: new (...args: Array<any>) => object, exactValue: any): void;
    anyTypeAndExactArgumentsBothOutputAsAnyTypeAndExactInNotExpectedValue(type: new (...args: Array<any>) => object, exactValue: any): void;
}
