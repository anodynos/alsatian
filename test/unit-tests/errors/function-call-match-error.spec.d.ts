export declare class FunctionCallMatchErrorTests {
    shouldBeCalledMessage(): void;
    shouldNotBeCalledMessage(): void;
    actualValueAndShouldMatchShouldBeSetToFunctionWasNotCalled(): void;
    actualValueAndShouldNotMatchShouldBeSetToFunctionWasCalled(): void;
    expectedValueAndShouldMatchShouldBeSetToFunctionToBeCalled(): void;
    expectedValueAndShouldNotMatchShouldBeSetToFunctionNotToBeCalled(): void;
    shouldBeCalledWithArgsMessage(args: Array<any>): void;
    shouldNotBeCalledWithArgsMessage(expectedArguments: Array<any>): void;
    actualValueAndShouldMatchShouldBeSetToFunctionWasNotCalledWithArguments(actualArgumentsList: Array<Array<any>>): void;
    actualValueAndShouldNotMatchShouldBeSetToFunctionWasCalledWithArguments(actualArgumentsList: Array<Array<any>>): void;
    expectedValueAndShouldMatchShouldBeSetToFunctionToBeCalledWithArguments(expectedArguments: Array<any>): void;
    expectedValueAndShouldNotMatchShouldBeSetToFunctionNotToBeCalledWithArguments(expectedArguments: Array<any>): void;
    anyArgumentOutputAsAnythingInMessage(): void;
    twoAnyArgumentsBothOutputAsAnythingInMessage(): void;
    anyArgumentOutputAsAnythingInNotExpectedMessage(): void;
    twoAnyArgumentsBothOutputAsAnythingInNotExpectedMessage(): void;
    anyArgumentOutputAsAnythingInExpectedValue(): void;
    twoAnyArgumentsBothOutputAsAnythingInExpectedValue(): void;
    anyArgumentOutputAsAnythingInNotExpectedValue(): void;
    twoAnyArgumentsBothOutputAsAnythingInNotExpectedValue(): void;
    anyTypeArgumentOutputAsAnyTypeInMessage(type: new (...args: Array<any>) => object): void;
    twoAnyTypeArgumentsBothOutputAsAnyTypeInMessage(typeOne: new (...args: Array<any>) => object, typeTwo: new (...args: Array<any>) => object): void;
    anyTypeArgumentOutputAsAnyTypeInNotExpectedMessage(type: new (...args: Array<any>) => object): void;
    twoAnyTypeArgumentsBothOutputAsAnyTypeInNotExpectedMessage(typeOne: new (...args: Array<any>) => object, typeTwo: new (...args: Array<any>) => object): void;
    anyTypeArgumentOutputAsAnyTypeInExpectedValue(type: new (...args: Array<any>) => object): void;
    twoAnyTypeArgumentsBothOutputAsAnyTypeInExpectedValue(typeOne: new (...args: Array<any>) => object, typeTwo: new (...args: Array<any>) => object): void;
    anyTypeArgumentOutputAsAnyTypeInNotExpectedValue(type: new (...args: Array<any>) => object): void;
    twoAnyTypeArgumentsBothOutputAsAnyTypeInNotExpectedValue(typeOne: new (...args: Array<any>) => object, typeTwo: new (...args: Array<any>) => object): void;
    anyAndAnyTypeArgumentsBothOutputAsAnythingAndAnyTypeInMessage(type: new (...args: Array<any>) => object): void;
    anyAndAnyTypeArgumentsBothOutputAsAnythingAndAnyTypeInMessageAnyTypeInNotExpectedMessage(type: new (...args: Array<any>) => object): void;
    anyAndAnyTypeArgumentsBothOutputAsAnythingAndAnyTypeInExpectedValue(type: new (...args: Array<any>) => object): void;
    anyAndAnyTypeArgumentsBothOutputAsAnythignAndAnyTypeInNotExpectedValue(type: new (...args: Array<any>) => object): void;
    anyTypeAndAnyArgumentsBothOutputAsAnyTypeAndAnythingInMessage(type: new (...args: Array<any>) => object): void;
    anyTypeAndAnyArgumentsBothOutputAsAnyTypeAndAnythingInMessageAnyTypeInNotExpectedMessage(type: new (...args: Array<any>) => object): void;
    anyTypeAndAnyArgumentsBothOutputAsAnyTypeAndAnythingInExpectedValue(type: new (...args: Array<any>) => object): void;
    anyTypeAndAnyArgumentsBothOutputAsAnyTypeAndAnythingInNotExpectedValue(type: new (...args: Array<any>) => object): void;
    anyTypeThatMatchesArgumentOutputAsAnyTypeInMessage<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType): void;
    twoAnyTypeThatMatchesArgumentsBothOutputAsAnyTypeInMessage<ExpectedType1 extends object, ExpectedType2 extends object>(typeOne: new (...args: Array<any>) => ExpectedType1, typeTwo: new (...args: Array<any>) => ExpectedType2): void;
    anyTypeThatMatchesArgumentOutputAsAnyTypeInNotExpectedMessage<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType): void;
    twoAnyTypeThatMatchesArgumentsBothOutputAsAnyTypeInNotExpectedMessage<ExpectedType1 extends object, ExpectedType2 extends object>(typeOne: new (...args: Array<any>) => ExpectedType1, typeTwo: new (...args: Array<any>) => ExpectedType2): void;
    anyTypeThatMatchesArgumentOutputAsAnyTypeInExpectedValue<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType): void;
    twoAnyTypeThatMatchesArgumentsBothOutputAsAnyTypeInExpectedValue<ExpectedType1 extends object, ExpectedType2 extends object>(typeOne: new (...args: Array<any>) => ExpectedType1, typeTwo: new (...args: Array<any>) => ExpectedType2): void;
    anyTypeArgumentThatMatchesOutputAsAnyTypeInNotExpectedValue<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType): void;
    twoAnyTypeThatMatchesArgumentsBothOutputAsAnyTypeInNotExpectedValue<ExpectedType1 extends object, ExpectedType2 extends object>(typeOne: new (...args: Array<any>) => ExpectedType1, typeTwo: new (...args: Array<any>) => ExpectedType2): void;
    anyAndAnyTypeThatMatchesArgumentsBothOutputAsAnythingAndAnyTypeInMessage<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType): void;
    anyAndAnyTypeThatMatchesArgumentsBothOutputAsAnythingAndAnyTypeInMessageAnyTypeInNotExpectedMessage<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType): void;
    anyAndAnyTypeThatMatchesArgumentsBothOutputAsAnythingAndAnyTypeInExpectedValue<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType): void;
    anyAndAnyTypeThatMatchesArgumentsBothOutputAsAnythignAndAnyTypeInNotExpectedValue<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType): void;
    anyTypeAndAnyThatMatchesArgumentsBothOutputAsAnyTypeAndAnythingInMessage<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType): void;
    anyTypeAndAnyThatMatchesArgumentsBothOutputAsAnyTypeAndAnythingInMessageAnyTypeInNotExpectedMessage<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType): void;
    anyTypeAndAnyThatMatchesArgumentsBothOutputAsAnyTypeAndAnythingInExpectedValue<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType): void;
    anyTypeAndAnyThatMatchesArgumentsBothOutputAsAnyTypeAndAnythingInNotExpectedValue<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType): void;
    exactAndAnyArgumentsBothOutputAsExactAndAnythingInMessage(exactValue: any): void;
    exactAndAnyArgumentsBothOutputAsExactAndAnythingInMessageAnyTyoeInNotExpectedMessage(exactValue: any): void;
    exactAndAnyArgumentsBothOutputAsExactAndAnythingInExpectedValue(exactValue: any): void;
    exactAndAnyArgumentsBothOutputAsExactAndAnythingInNotExpectedValue(exactValue: any): void;
    anyAndExactArgumentsBothOutputAsAnythingAndExactInMessage(exactValue: any): void;
    anyAndExaactArgumentsBothOutputAsAnythingAndExactInMessageAnyTyoeInNotExpectedMessage(exactValue: any): void;
    anyAndExactArgumentsBothOutputAsAnythingAndExactInExpectedValue(exactValue: any): void;
    anyAndExactArgumentsBothOutputAsAnythingAndExactInNotExpectedValue(exactValue: any): void;
    exactAndAnyTypeArgumentsBothOutputAsExactAndAnyTypeInMessage(type: new (...args: Array<any>) => object, exactValue: any): void;
    exactAndAnyTypeArgumentsBothOutputAsExactAndAnyTypeInMessageAnyTypeInNotExpectedMessage(type: new (...args: Array<any>) => object, exactValue: any): void;
    exactAndAnyTypeArgumentsBothOutputAsExactAndAnyTypeInExpectedValue(type: new (...args: Array<any>) => object, exactValue: any): void;
    exactAndAnyTypeArgumentsBothOutputAsExactAndAnyTypeInNotExpectedValue(type: new (...args: Array<any>) => object, exactValue: any): void;
    anyTypeAndExactArgumentsBothOutputAsAnyTypeAndExactInMessage(type: new (...args: Array<any>) => object, exactValue: any): void;
    anyTypeAndExaactArgumentsBothOutputAsAnyTypeAndExactInMessageAnyTyoeInNotExpectedMessage(type: new (...args: Array<any>) => object, exactValue: any): void;
    anyTypeAndExactArgumentsBothOutputAsAnyTypeAndExactInExpectedValue(type: new (...args: Array<any>) => object, exactValue: any): void;
    anyTypeAndExactArgumentsBothOutputAsAnyTypeAndExactInNotExpectedValue(type: new (...args: Array<any>) => object, exactValue: any): void;
    exactAndAnyTypeThatMatchesArgumentsBothOutputAsExactAndAnyTypeInMessage<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType, exactValue: any): void;
    exactAndAnyTypeThatMatchesArgumentsBothOutputAsExactAndAnyTypeInMessageAnyTypeInNotExpectedMessage<ExpectedType extends object>(type: new (...args: Array<any>) => ExpectedType, exactValue: any): void;
    exactAndAnyTypeThatMatchesArgumentsBothOutputAsExactAndAnyTypeInExpectedValue<ExpectedType extends object>(type: new (...args: Array<any>) => object, exactValue: any): void;
    exactAndAnyTypeThatMatchesArgumentsBothOutputAsExactAndAnyTypeInNotExpectedValue<ExpectedType extends object>(type: new (...args: Array<any>) => object, exactValue: any): void;
    anyTypeAndExactThatMatchesArgumentsBothOutputAsAnyTypeAndExactInMessage<ExpectedType extends object>(type: new (...args: Array<any>) => object, exactValue: any): void;
    anyTypeAndExactThatMatchesArgumentsBothOutputAsAnyTypeAndExactInMessageAnyTyoeInNotExpectedMessage<ExpectedType extends object>(type: new (...args: Array<any>) => object, exactValue: any): void;
    anyTypeAndExactThatMatchesArgumentsBothOutputAsAnyTypeAndExactInExpectedValue<ExpectedType extends object>(type: new (...args: Array<any>) => object, exactValue: any): void;
    anyTypeAndExactThatMatchesArgumentsBothOutputAsAnyTypeAndExactInNotExpectedValue<ExpectedType extends object>(type: new (...args: Array<any>) => object, exactValue: any): void;
}
